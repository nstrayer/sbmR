% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collapse_groups.R
\name{collapse_groups}
\alias{collapse_groups}
\title{Agglomeratively merge groups}
\usage{
collapse_groups(
  sbm,
  level = 0,
  num_mcmc_sweeps = 10,
  desired_num_groups = 1,
  exhaustive = TRUE,
  beta = 1.5,
  greedy = FALSE,
  num_group_proposals = 5,
  sigma = 2
)
}
\arguments{
\item{sbm}{SBM model object as created by \code{\link{create_sbm()}}.}

\item{level}{Level of nodes who's groups will have their group membership run
through MCMC proposal-accept routine.}

\item{num_mcmc_sweeps}{Number of MCMC sweeps to run in between merge steps to
allow model to find best partitioning with given number of groups. Set to
zero for fast but more likely incorrect structure}

\item{desired_num_groups}{How many groups should be left at the end of the
collapsing? Ignored if \code{exhaustive = TRUE}.}

\item{exhaustive}{Should collapsing exhaust all possible number of groups?
I.e. should network be collapsed one group at a time down to one group per
node type?}

\item{beta}{Inverse temperature parameter for determining move acceptance
probability. Only applicable if \code{num_mcmc_sweeps > 0}.}

\item{greedy}{Should all possible moves be considered for merging or should a
set number of proposals be drawn?}

\item{num_group_proposals}{If \code{greedy = FALSE}, how many move proposals
should each node produce for merge options?}

\item{sigma}{Controls how fast collapse of network happens. For instance if
set to \code{2} then half (\code{1/2}) of the nodes will be removed at each step
until the desired number remains. If \code{exhaustive = TRUE} then this
parameter will do nothing}
}
\value{
List with \code{entropy} and model \code{state} after each merge.
}
\description{
Performs agglomerative merging on network, starting with each group has a
single node down to one group per node type. Arguments are level to perform
merge at (int) and number of MCMC steps to peform between each collapsing to
equilibriate group. See the \code{agglomerative_merging.Rmd} vignette for more
complete discussion of options/behavior.
}
\examples{

set.seed(42)

# Start with a random network of two groups with 25 nodes each
my_sbm <- sim_basic_block_network(n_groups = 2, n_nodes_per_group = 25) \%>\%
  create_sbm()

# Run agglomerative clustering with no intermediate MCMC steps on network
collapse_results <- collapse_groups(my_sbm, num_mcmc_sweeps = 0)

# Investigate number of nodes at each step
collapse_results \%>\%
  purrr::map('state') \%>\%
  purrr::map_int(~dplyr::filter(., level == 1) \%>\% nrow())

}
