% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualize_collapse_results.R
\name{visualize_collapse_results}
\alias{visualize_collapse_results}
\title{Visualize agglomerative collapse results}
\usage{
visualize_collapse_results(collapse_results, heuristic = NULL)
}
\arguments{
\item{collapse_results}{Dataframe of agglomerative merging based collapse
results as returned from \link{\code{collapse_run}}, or
\link{\code{collapse_blocks(report_all_steps = TRUE)}}.}

\item{heuristic}{How the best partitioning is defined. Takes either a
function that takes one/two arguments: an entropy vector and an optional
number of blocks vector with each element corresponding to a given
location, or a string labeling algorithm. Currently only \code{"lowest"},
\code{"dev_from_rolling_mean"}, \code{"delta_ratio"}, and \code{"nls_residual"} are supported.}
}
\value{
GGplot object comparing the fit results and each step's deviance from
the rolling mean
}
\description{
Plots entropy against number of blocks left for a collapse run. If
\code{heuristic} is set to value other than \code{NULL} a second plot of the score for
each merger step according to the heuristic provided is also shown.
}
\examples{
set.seed(42)

# Start with a random network of two blocks with 25 nodes each
network <- sim_basic_block_network(n_blocks = 3, n_nodes_per_block = 25)

# Run agglomerative clustering with no intermediate MCMC steps on sbm of simulated data
collapse_results <- create_sbm(network) \%>\%
  collapse_run(sigma = 3, start_block_num = 1, end_block_num = 8)

# =============================================================================
# Visualize using no heuristic
visualize_collapse_results(collapse_results)

# =============================================================================
# Visualize using deviance from rolling average heuristic
visualize_collapse_results(collapse_results, heuristic = 'dev_from_rolling_mean')

# =============================================================================
# Visualize using custom heuristic

# Score heuristic that fits a nonlinear model to observed values and chooses by
# largest negative residual
nls_score <- function(e, k){
  entropy_model <- nls(e ~ a + b * log(k), start = list(a = max(e), b = -25))
  -residuals(entropy_model)
}

visualize_collapse_results(collapse_results, heuristic = nls_score)

}
