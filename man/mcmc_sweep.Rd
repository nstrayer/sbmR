% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc_sweep.R
\name{mcmc_sweep}
\alias{mcmc_sweep}
\title{Run a single MCMC sweep over nodes}
\usage{
mcmc_sweep(
  sbm,
  num_sweeps = 1,
  variable_num_blocks = TRUE,
  track_pairs = FALSE,
  level = 0
)
}
\arguments{
\item{sbm}{SBM model object as created by \code{\link{create_sbm()}}.}

\item{num_sweeps}{Number of times all nodes are passed through for move
proposals.}

\item{variable_num_blocks}{Should the model allow new blocks to be created or
empty blocks removed while sweeping or should number of blocks remain
constant?}

\item{track_pairs}{Return a dataframe with all pairs of nodes along with the
number of sweeps they shared the same group?}

\item{level}{Level of nodes who's blocks will have their block membership run
through MCMC proposal-accept routine.}
}
\value{
List with two dataframes. The first telling for all sweeps everytime
a node was moved and what group it was moved to. The second telling for
each sweep the entropy delta and total number of nodes that were moved to
new groups in that sweep. If \code{track_pairs = TRUE}, then an additional
\code{pairing_counts} dataframe is added to output.
}
\description{
Runs a single Metropolis Hastings MCMC sweep across all nodes at specified
level (For algorithm details see
\href{https://arxiv.org/abs/1705.10225}{Piexoto, 2018}). Each node is given a
chance to move blocks or stay in current block and all nodes are processed in
random order. Takes the level that the sweep should take place on (int) and
if new blocks blocks can be proposed and empty blocks removed (boolean).
}
\examples{

set.seed(42)

# Start with a random network and assign randomly to 4 blocks
n_blocks <- 3
my_sbm <- create_sbm(sim_basic_block_network(n_blocks = n_blocks, n_nodes_per_block = 15)) \%>\%
  initialize_blocks(num_blocks = n_blocks)

# Calculate entropy with random blocks
compute_entropy(my_sbm)

# Run 4 MCMC sweeps
sweep_results <- my_sbm \%>\% mcmc_sweep(num_sweeps = 4, variable_num_blocks = FALSE)

# Look at the per-sweep level information
sweep_results$sweep_info

# Get idea of node-pair similarity by looking at how often every pair of nodes is connected over sweeps
my_sbm \%>\% mcmc_sweep(num_sweeps = 4, track_pairs = TRUE)

}
