% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collapse_run.R
\name{collapse_run}
\alias{collapse_run}
\title{Run Agglomerative Merging to target a range of group numbers}
\usage{
collapse_run(
  sbm,
  level = 0,
  sigma = 2,
  start_group_num = 1,
  end_group_num = 10,
  num_group_proposals = 5,
  num_mcmc_sweeps = 10,
  beta = 1.5,
  parallel = FALSE
)
}
\arguments{
\item{sbm}{SBM model object as created by \code{\link{create_sbm()}}.}

\item{level}{Level of nodes who's groups will have their group membership run
through MCMC proposal-accept routine.}

\item{sigma}{Controls the rate of collapse. At each step of the collapsing
the model will try and remove \code{current_num_nodes(1 - 1/sigma)} nodes from
the model. So a larger sigma means a faster collapse rate.}

\item{start_group_num}{Fewest number of groups to test}

\item{end_group_num}{Highest number of groups to test}

\item{num_group_proposals}{If \code{greedy = FALSE}, this parameter controls how
many merger proposals are drawn for each group in the model. A larger
number will increase the exploration of merge potentials but may lead the
model to local minimums for the same reason greedy mode does.}

\item{num_mcmc_sweeps}{How many MCMC sweeps the model does at each
agglomerative merge step. This allows the model to allow nodes to find
their most natural resting place in a given collapsed state. Larger values
will slow down runtime but can potentially lead for more stable results.}

\item{beta}{Inverse temperature parameter impacting the acceptance
probabilities of MCMC sweeps. A higher value means model puts more weight
on accepting moves that improve model fit. Only matters if
\code{num_mcmc_sweeps} is more than zero.}

\item{parallel}{Run in parallel using \code{furrr}?}
}
\value{
Tibble with three columns with rows corresponding to the result of
each merge step:  \code{entropy}, \code{num_groups} left in model, and a list column
of \code{state} which is the state dump dataframe for model at end of merge.
}
\description{
Run Agglomerative Merging to target a range of group numbers
}
\examples{
set.seed(42)

# Start with a random network of two groups with 25 nodes each
network <- sim_basic_block_network(n_groups = 3, n_nodes_per_group = 25)

# Create SBM from simulated data
my_sbm <- create_sbm(network)

# Run agglomerative clustering with no intermediate MCMC steps on network
collapse_results <- collapse_run(my_sbm, sigma = 3, start_group_num = 1, end_group_num = 6)

# Visualize results of collapsing
visualize_collapse_results(collapse_results)

# Choose best result
my_sbm <- choose_best_collapse_state(my_sbm, collapse_results, verbose = TRUE)

}
