% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initialize_blocks.R
\name{initialize_blocks}
\alias{initialize_blocks}
\title{Assign blocks for all nodes}
\usage{
initialize_blocks(sbm, num_blocks = NULL, level = 0)
}
\arguments{
\item{sbm}{\code{sbm_network} object as created by
\code{\link{new_sbm_network()}}.}

\item{num_blocks}{Total number of blocks to initialize for each unique node
type. If set to \code{-1}, then a single block is made for every node.}

\item{level}{Level of child node. This will almost always stay at default
value of \code{0}.}
}
\value{
SBM model object modified with new block nodes and node hierarchy
modified. \emph{Note that object is modified in place as well.}
}
\description{
Initializes blocks for a given level of network. When \code{num_blocks = -1} (the
default) this will simply give every node its own block. Otherwise it will
randomly draw each nodes block from \code{num_block} possible parent nodes for
each node type. E.g. if network is bipartite and \code{num_blocks == 3} a total of
\code{3*2 = 6} blocks will be added and assigned randomly to nodes. Because of
random assignment of parents there may sometimes be less blocks than
\verb{num_blocks * <num_types>} due to some block nodes never being assigned to a
child node.
}
\examples{
# Helper function to get number of blocks in a model
get_num_blocks <- function(sbm){sum(get_state(sbm)$level == 1)}

# Initialize a simple bipartite network with 6 total nodes (3 of each type)
my_nodes <- dplyr::tibble(
  id = c("a1", "a2", "a3", "b1", "b2", "b3"),
  type = c("a", "a", "a", "b", "b", "b")
)
my_sbm <- create_sbm(nodes = my_nodes)

# Default values of function will give every node its own block
my_sbm \%>\% initialize_blocks()
get_num_blocks(my_sbm)

# You can also decide to have a given number of blocks randomly assigned Here
# four blocks result because two random blocks are made for each of the two
# types
my_sbm \%>\% initialize_blocks(num_blocks = 2)
get_num_blocks(my_sbm)

}
\seealso{
Other advanced: 
\code{\link{add_edge}()},
\code{\link{add_node}()},
\code{\link{get_node_to_block_edge_counts}()},
\code{\link{set_node_parent}()}
}
\concept{advanced}
